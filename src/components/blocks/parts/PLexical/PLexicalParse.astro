---
import type { SerializedLexicalNode, NodeProps } from './types';

import PLexicalInner from "./PLexicalInner.astro";

// Text node formatting
export const IS_BOLD = 1;
export const IS_ITALIC = 1 << 1;
export const IS_STRIKETHROUGH = 1 << 2;
export const IS_UNDERLINE = 1 << 3;
export const IS_CODE = 1 << 4;
export const IS_SUBSCRIPT = 1 << 5;
export const IS_SUPERSCRIPT = 1 << 6;
export const IS_HIGHLIGHT = 1 << 7;

export const WrapObject = [
  { test: IS_SUPERSCRIPT, component: "sup" },
  { test: IS_SUBSCRIPT, component: "sub" },
  { test: IS_CODE, component: "code" },
  { test: IS_UNDERLINE, component: "span", style: "underline" },
  { test: IS_STRIKETHROUGH, component: "span", style: "line-through" },
  { test: IS_ITALIC, component: "em" },
  { test: IS_BOLD, component: "strong" },
];

interface Props {
    content: SerializedLexicalNode[];
}

const {content} = Astro.props;
---
{
  !content.length ? "" :
  content.map((item, i) => {
    const { format, text, type, fields } = item;
    if( type === 'linebreak'){
     return <br/>;
    }else if( type === "link") {
      return <a>inner stuff</a>
    }else if( type === "text"){
     return <PLexicalInner children={item} />;
    } else {
      return null;
    }
  })
}

