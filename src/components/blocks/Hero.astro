---
import type { LexicalEditor } from "./parts/PLexical/types";
import type { BlockHero } from "@src/types/payload-types";

import PLexical from "./parts/PLexical/index.astro";

interface Props {
  content: BlockHero;
}
const {
  content: {
    image,
    textEditor,
    min_height = 400,
    text_width = 30,
    text_location = "center_left",
    image_opacity = 100,
  },
} = Astro.props;

const prefix = import.meta.env.MEDIAPATH || "/media/";

const alignMap = {
  top: "flex-start",
  left: "flex-start",
  center: "center",
  bottom: "flex-end",
  right: "flex-end",
};

const imageProps = {
  src: typeof image === "string" ? "" : prefix + image.filename,
  alt: "",
  style: {
    opacity: `${(image_opacity || 100) * 0.01}`,
  },
};


const [align, justify] = (text_location || "center_left").split("_");

const wrapStyles = {
  minHeight: `${min_height}px`,
  alignItems: alignMap[align as keyof typeof alignMap],
  justifyContent: alignMap[justify as keyof typeof alignMap],
};
---

<div class="hero-wrap" style={wrapStyles}>
  {
    textEditor && (
      <div class="hero-text">
        <PLexical textEditor={textEditor as any} />
      </div>
    )
  }
  <div class="hero-gradient"></div>
  <img class="hero-bg-image" {...imageProps} />
</div>

<style lang="scss">
  .hero-wrap {
    position: relative;
    width: 100%;
    height: 100%;
    z-index: 0;
    display: flex;
    padding: 2em;
    color: $white;
    .hero-bg-image {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      object-fit: cover;
      object-position: center;
      z-index: -1;
    }
  }
  .hero-text {
    z-index: 10;
  }
  .hero-gradient {
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: .6;
    top: 0;
    left: 0;
    z-index: 2;
    background-image: linear-gradient(
      to right,
      rgba(0, 0, 0, 1),
      rgba(0, 0, 0, 0)
    );
  }
</style>
