---
//TODO: Parse Lexical Editor
import "@bootstrap/scss/_accordion.scss";
import type { BlockAccordion } from "src/types/payload-types";

interface Props {
  content: BlockAccordion;
}

const {
  content: { title, columns = "1", list, id, blockType },
} = Astro.props;

const parentId = id ? `accordion-${id}` : blockType;
const cols = parseInt(columns || '1');
---

{title && <h2>{title}</h2>}
<div class="accordion accordion-flush" id={parentId}>
  <div class=`row row-cols-${cols}`>
    {
      list &&
        list.map((item, i) => {
          const itemId = item.id ? `item-${item.id}` : `item-${i}`;
          let text = "Doobie doo";
          try {
            text = JSON.stringify(item?.textEditor|| {});
          } catch {
            text = "Lorem Ipusm";
          }

          return (
            <div class="col">
              <div class="accordion-item">
                <h2 class="accordion-header">
                  <button
                    class="accordion-button collapsed"
                    type="button"
                    data-bs-toggle="collapse"
                    data-bs-target={`#${itemId}`}
                    aria-expanded="false"
                    aria-controls={itemId}
                  >
                    {item.title}
                  </button>
                </h2>
                <div
                  id={itemId}
                  class="accordion-collapse collapse"
                  data-bs-parent={`#${parentId}`}
                >
                  <div class="accordion-body" style="word-break: break-all;">
                    {text}
                  </div>
                </div>
              </div>
            </div>
          );
        })
    }
  </div>
</div>

<script>
  import "bootstrap/js/src/collapse";
</script>
<style lang="scss">
    .accordion-button {
        box-shadow: inset 0 1px 0 #{$gray-400};
    }
</style>