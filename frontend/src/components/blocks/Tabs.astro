---
import type { BlockTabs } from "src/types/payload-types";
import "@bootstrap/scss/_nav.scss";
import PLexical from "./parts/PLexical/index.astro";
import { generateUUID } from "src/lib/utilities";

//TODO: Fade effect takes a few clicks

interface Props {
  content: BlockTabs;
}
const {
  content: { list, id },
} = Astro.props;

const UID = id || generateUUID;

const parentID = `tab-parent-${UID}`;
const contentID = `tab-content-${UID}`;
---

<ul class="nav nav-underline" id={parentID} role="tablist">
  {
    list &&
      list.map((item, i) => {
        const tabID = `tab-${UID}-${i}`;
        const tabTarget = `${tabID}-pane`;
        return (
          <li class="nav-item" role="presentation">
            <button
              class:list={["nav-link", { active: i === 0 }]}
              id={tabID}
              data-bs-target={`#${tabTarget}`}
              aria-controls={tabTarget}
              aria-selected={!!(i === 0)}
              data-bs-toggle="tab"
              type="button"
              role="tab"
            >
              {item.title}
            </button>
          </li>
        );
      })
  }
</ul>
<div class="tab-content" id={contentID}>
  {
    list &&
      list.map((item, i) => {
        const tabID = `tab-${UID}-${i}`;
        const paneID = `${tabID}-pane`;
        return (
          <div
            class="tab-pane fade show active"
            class:list={[
                "p-3",
              "tab-pane",
              "fade",
              { show: i === 0 },
              { active: i == 0 },
            ]}
            id={paneID}
            role="tabpanel"
            aria-labelledby={tabID}
            tabindex="0"
          >
            {item.textEditor && (
              <PLexical textEditor={item.textEditor as any} />
            )}
          </div>
        );
      })
  }
</div>

<script>
  import "bootstrap/js/src/tab";
</script>
